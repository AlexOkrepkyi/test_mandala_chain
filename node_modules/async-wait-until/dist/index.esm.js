class e extends Error{constructor(t){super(null!=t?`Timed out after waiting for ${t} ms`:"Timed out"),Object.setPrototypeOf(this,e.prototype)}}const t=(e,t)=>new Promise(((o,r)=>{try{e.schedule(o,t)}catch(e){r(e)}})),o={schedule:(e,t)=>{let o;const r=e=>{null!=e&&clearTimeout(e),o=void 0};return o=setTimeout((()=>{r(o),e()}),t),{cancel:()=>r(o)}}},r=50,n=5e3,c=Number.POSITIVE_INFINITY,l=(r,n,l)=>{var u,s;const i=null!==(u="number"==typeof n?n:null==n?void 0:n.timeout)&&void 0!==u?u:5e3,m=null!==(s="number"==typeof n?l:null==n?void 0:n.intervalBetweenAttempts)&&void 0!==s?s:50;let a=!1;const d=()=>new Promise(((e,n)=>{const c=()=>{a||new Promise(((e,t)=>{try{e(r())}catch(e){t(e)}})).then((r=>{r?e(r):t(o,m).then(c).catch(n)})).catch(n)};c()})),h=i!==c?()=>t(o,i).then((()=>{throw a=!0,new e(i)})):void 0;return null!=h?Promise.race([d(),h()]):d()};export default l;export{r as DEFAULT_INTERVAL_BETWEEN_ATTEMPTS_IN_MS,n as DEFAULT_TIMEOUT_IN_MS,e as TimeoutError,c as WAIT_FOREVER,l as waitUntil};//# sourceMappingURL=index.esm.js.map
